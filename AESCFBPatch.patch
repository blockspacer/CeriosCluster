diff --git a/crypto/cipher/e_aes.c b/crypto/cipher/e_aes.c
index e8905f6..dfb860a 100644
--- a/crypto/cipher/e_aes.c
+++ b/crypto/cipher/e_aes.c
@@ -357,6 +357,15 @@ static int aes_cbc_cipher(EVP_CIPHER_CTX *ctx, uint8_t *out, const uint8_t *in,
   return 1;
 }
 
+static int aes_cfb_cipher(EVP_CIPHER_CTX *ctx, unsigned char *out,
+                          const unsigned char *in,size_t len)
+{
+     EVP_AES_KEY *dat = (EVP_AES_KEY *)ctx->cipher_data;
+     CRYPTO_cfb128_encrypt(in, out, len, &dat->ks, ctx->iv, &ctx->num,
+                           ctx->encrypt, dat->block);
+    return 1;
+}
+
 static int aes_ecb_cipher(EVP_CIPHER_CTX *ctx, uint8_t *out, const uint8_t *in,
                           size_t len) {
   size_t bl = ctx->cipher->block_size;
@@ -728,6 +737,12 @@ static const EVP_CIPHER aes_128_cbc = {
     NULL /* app_data */, aes_init_key,        aes_cbc_cipher,
     NULL /* cleanup */,  NULL /* ctrl */};
 
+static const EVP_CIPHER aes_128_cfb = {
+    NID_aes_128_cfb128,  1 /* block_size */, 16 /* key_size */,
+    16 /* iv_len */,     sizeof(EVP_AES_KEY), EVP_CIPH_CFB_MODE,
+    NULL /* app_data */, aes_init_key,        aes_cfb_cipher,
+    NULL /* cleanup */,  NULL /* ctrl */};
+
 static const EVP_CIPHER aes_128_ctr = {
     NID_aes_128_ctr,     1 /* block_size */,  16 /* key_size */,
     16 /* iv_len */,     sizeof(EVP_AES_KEY), EVP_CIPH_CTR_MODE,
@@ -790,6 +805,12 @@ static const EVP_CIPHER aes_256_cbc = {
     NULL /* app_data */, aes_init_key,        aes_cbc_cipher,
     NULL /* cleanup */,  NULL /* ctrl */};
 
+static const EVP_CIPHER aes_256_cfb = {
+    NID_aes_256_cfb128,  1 /* block_size */, 32 /* key_size */,
+    16 /* iv_len */,     sizeof(EVP_AES_KEY), EVP_CIPH_CFB_MODE,
+    NULL /* app_data */, aes_init_key,        aes_cfb_cipher,
+    NULL /* cleanup */,  NULL /* ctrl */};
+
 static const EVP_CIPHER aes_256_ctr = {
     NID_aes_256_ctr,     1 /* block_size */,  32 /* key_size */,
     16 /* iv_len */,     sizeof(EVP_AES_KEY), EVP_CIPH_CTR_MODE,
@@ -1005,6 +1026,11 @@ static const EVP_CIPHER aesni_256_gcm = {
     NULL /* app_data */, aesni_gcm_init_key, aes_gcm_cipher, aes_gcm_cleanup,
     aes_gcm_ctrl};
 
+/* CFB mode is not implemented with aesni,
+ * we use the standard version instead. */
+#define aesni_128_cfb aes_128_cfb
+#define aesni_256_cfb aes_256_cfb
+
 #define EVP_CIPHER_FUNCTION(keybits, mode)             \
   const EVP_CIPHER *EVP_aes_##keybits##_##mode(void) { \
     if (aesni_capable()) {                             \
@@ -1028,6 +1054,7 @@ static char aesni_capable(void) {
 #endif
 
 EVP_CIPHER_FUNCTION(128, cbc)
+EVP_CIPHER_FUNCTION(128, cfb)
 EVP_CIPHER_FUNCTION(128, ctr)
 EVP_CIPHER_FUNCTION(128, ecb)
 EVP_CIPHER_FUNCTION(128, ofb)
@@ -1039,6 +1066,7 @@ EVP_CIPHER_FUNCTION(192, ecb)
 EVP_CIPHER_FUNCTION(192, gcm)
 
 EVP_CIPHER_FUNCTION(256, cbc)
+EVP_CIPHER_FUNCTION(256, cfb)
 EVP_CIPHER_FUNCTION(256, ctr)
 EVP_CIPHER_FUNCTION(256, ecb)
 EVP_CIPHER_FUNCTION(256, ofb)
diff --git a/include/openssl/cipher.h b/include/openssl/cipher.h
index a4e79dd..e2f2c0e 100644
--- a/include/openssl/cipher.h
+++ b/include/openssl/cipher.h
@@ -82,11 +82,13 @@ OPENSSL_EXPORT const EVP_CIPHER *EVP_des_ede3_cbc(void);
 
 OPENSSL_EXPORT const EVP_CIPHER *EVP_aes_128_ecb(void);
 OPENSSL_EXPORT const EVP_CIPHER *EVP_aes_128_cbc(void);
+OPENSSL_EXPORT const EVP_CIPHER *EVP_aes_128_cfb(void);
 OPENSSL_EXPORT const EVP_CIPHER *EVP_aes_128_ctr(void);
 OPENSSL_EXPORT const EVP_CIPHER *EVP_aes_128_ofb(void);
 
 OPENSSL_EXPORT const EVP_CIPHER *EVP_aes_256_ecb(void);
 OPENSSL_EXPORT const EVP_CIPHER *EVP_aes_256_cbc(void);
+OPENSSL_EXPORT const EVP_CIPHER *EVP_aes_256_cfb(void);
 OPENSSL_EXPORT const EVP_CIPHER *EVP_aes_256_ctr(void);
 OPENSSL_EXPORT const EVP_CIPHER *EVP_aes_256_ofb(void);
 OPENSSL_EXPORT const EVP_CIPHER *EVP_aes_256_xts(void);
